from abc import ABC, abstractmethod

class Product(ABC):
    def __init__(self, product_id, name, price, stock):
        self.product_id = product_id
        self.name = name
        self.price = price
        self.stock = stock

    @abstractmethod
    def display_product_info(self):
        pass

    @abstractmethod
    def calculate_total_value(self):
        pass

class ElectronicsProduct(Product):
    def __init__(self, product_id, name, price, stock, power_consumption):
        super().__init__(product_id, name, price, stock)
        self.power_consumption = power_consumption

    def display_product_info(self):
        print(f"Electronics Product: {self.name} (ID: {self.product_id})")
        print(f"Price: ${self.price:.2f}, Stock: {self.stock} units")
        print(f"Power Consumption: {self.power_consumption} watts")

    def calculate_total_value(self):
        return self.price * self.stock

class ClothingProduct(Product):
    def __init__(self, product_id, name, price, stock, size):
        super().__init__(product_id, name, price, stock)
        self.size = size

    def display_product_info(self):
        print(f"Clothing Product: {self.name} (ID: {self.product_id})")
        print(f"Price: ${self.price:.2f}, Stock: {self.stock} units")
        print(f"Size: {self.size}")

    def calculate_total_value(self):
        return self.price * self.stock

class Store:
    def __init__(self, name):
        self.name = name
        self.products = []

    def add_product(self, product):
        self.products.append(product)

    def display_inventory(self):
        print(f"Inventory for {self.name}:")
        for product in self.products:
            product.display_product_info()
            print("--------------------------")

    def calculate_total_inventory_value(self):
        total_value = 0
        for product in self.products:
            total_value += product.calculate_total_value()
        return total_value

# Example usage:
electronics_product = ElectronicsProduct(1, "Laptop", 800, 10, 65)
clothing_product = ClothingProduct(2, "T-shirt", 20, 50, "M")

store = Store("MyStore")
store.add_product(electronics_product)
store.add_product(clothing_product)

store.display_inventory()
total_value = store.calculate_total_inventory_value()
print(f"Total Inventory Value: ${total_value:.2f}")
